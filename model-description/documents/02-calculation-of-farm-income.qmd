---
title: "Calculation of farm income"
subtitle: "MtM ABM documentation"
author: "David O'Sullivan"
date: 14 February 2025
format:
  html:
    toc: true
    toc-depth: 4
    toc-title: "Contents"
    code-fold: true
    html-math-method: katex
    embed-resources: true
knitr:
  opts_chunk: 
    warning: false
    message: false
    # echo: false
    R.options: 
      knitr.table.html.attr: "quarto-disable-processing=true"
---

::: {.callout-note collapse="true"}
#### Update History

| Date | Changes
|:-|:--------|
| 2025-02-14 | Initial post.                       

:::

```{r echo=FALSE,warnings=FALSE,results=FALSE,message=FALSE}
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(kableExtra)

base_dir <- "~/Documents/work/mwlr-moving-the-middle/abm/data/market/default/"
```


## Baseline income equation for farms
The baseline profit $Z$ of each hectare of a farm is given by

$$Z=Y-X$$

where $Y$ is gross income, and $X$ is total costs. These are in turn given by

$$
\begin{array}{rcl}
Y &=& pq \\
X &=& x+te
\end{array}
$$

where 

- $p$ is the price obtained per unit, 
- $q$ is the quantity produced per hectare,
- $x$ is the cost per hectare to operate,
- $e$ is the greenhouse gas emissions per hectare, and 
- $t$ is the tax on each unit of emissions.

Each of these parameters may depend on the _farm type_ $F$ (one of Crops, Dairy, Forestry, or Sheep/Beef) and the _land use capability_ (LUC), $L$, such that the full calculation of profit for each hectare of a farm is
$$
Z_{FL} = p_Fq_{FL} - x_{FL} - te_{FL}
$$
and total farm profit is obtaining by summing this quantity across all hectares of the farm (which may be of varying landuse capability $L$).

### Parameter values
The parameter values are stored in a number of CSV files which are read in by the model at start up.

#### Prices 
$p_F$ and the greenhouse gas tax (i.e. carbon price), $t$, are in the `prices.csv` file:

```{r}
prices <- read.csv(str_glue("{base_dir}prices.csv"), 
                   header = T, row.names = 1) |> 
  slice(1:2) # only rows 1 & 2 relevant
prices |> 
  kable() |> 
  kable_styling("striped", full_width = F)
```

#### Yields 
Yields by farm type and landuse capability, $q_{FL}$, are in the `commodity-yields.csv` file:

```{r}
yields <- read.csv(str_glue("{base_dir}commodity-yields.csv"), 
                   header = T, row.names = 1)
yields |> 
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

#### Costs 
Base costs per ha. by farm type and landuse capability, $x_{FL}$, are in the `input-costs.csv` file:

```{r}
costs <- read.csv(str_glue("{base_dir}input-costs.csv"), 
                   header = T, row.names = 1)
costs |> 
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

#### Emissions
Emissions per ha. by farm type and landuse capability, $e_{FL}$, are in the `ghg-emissions.csv` file:

```{r}
emissions <- read.csv(str_glue("{base_dir}ghg-emissions.csv"), 
                      header = T, row.names = 1)
emissions |> 
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```
&nbsp;

Note that all of yields, base costs, and emissions are stored as a mean and a standard deviation, and that individual hectare sites will see these numbers vary every model time period by drawing from a normal distribution. 

We can use these data to show the profit, gross income, and total costs for each farm type across different landuse capability classes. We'll throw away the standard deviations for simplicity and consider only mean outcomes.

```{r}
prices <- prices |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("farm_type") |>
  rename(price = Price_Commodity, carbon_tax = Price_GhG) |>
  slice(rep(row_number(), 8)) |>
  mutate(LUC = rep(1:8, each = 4))

yields <- yields |>
  slice(seq(1, 15, 2)) |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("farm_type") |>
  pivot_longer(-1) |>
  mutate(LUC = rep(1:8, 4), yield = round(value, 1)) |>
  select(farm_type, LUC, yield)

costs <- costs |>
  slice(seq(1, 15, 2)) |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("farm_type") |>
  pivot_longer(-1) |>
  mutate(LUC = rep(1:8, 4), costs = round(value, 1)) |>
  select(farm_type, LUC, costs)

emissions <- emissions |> 
  slice(seq(1, 15, 2)) |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("farm_type") |>
  pivot_longer(-1) |>
  mutate(LUC = rep(1:8, 4), emissions = round(value, 1)) |>
  select(farm_type, LUC, emissions)

combined_data <- prices |>
  left_join(yields) |>
  left_join(costs) |>
  left_join(emissions) |>
  mutate(gross_income = price * yield, # LUC = as.factor(LUC),
         total_costs = costs + carbon_tax * emissions, base_costs = costs,
         profit = gross_income - total_costs) |>
  select(farm_type, LUC, profit, price, yield, gross_income, base_costs,
         emissions, carbon_tax, total_costs) |>
  rename(Profit = profit, `Gross income` = gross_income, `Total costs` = total_costs)

combined_data |> 
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

### Or visually...
Below are shown the income, costs, and net revenue per hectare for each farm type across the eight landuse capability classes. These are crude estimates dating back to the ARLUNZ model^[See: Morgan FJ and AJ Daigneault. 2015. [Estimating Impacts of Climate Change Policy on Land Use: An Agent-Based Modelling Approach](https://dx.doi.org/10.1371/journal.pone.0127317). _PLOS ONE_ **10**(5): e0127317.] and will be updated in due course.

```{r}
plot_data <- combined_data |> 
  pivot_longer(cols = c("Gross income", "Profit", "Total costs"))

ggplot(plot_data |> filter(name %in% c("Gross income", "Total costs"))) +
  geom_col(aes(x = as.factor(LUC), y = value, group = name, fill = name),
           position = "dodge") + 
  scale_fill_manual(values = c("#999999", "#ff6666"), name = "Income vs. Costs") +
  geom_point(data = plot_data |> filter(name == "Profit"), 
            aes(x = LUC, y = value, shape = name), size = 7) +
  scale_shape_manual(values = "\u2014", name = "") + # \u2014 is an em-dash
  # The below more correct, but doesn't extend the lines to the full width of the plot
  # geom_step(data = plot_data |> filter(name == "Profit"), 
  #           aes(x = LUC, y = value, group = farm_type, colour = name), 
  #           direction = "mid", lwd = 0.65) +
  # scale_colour_manual(values = c("black"), name = "") +
  xlab("Landuse Capability (LUC)") +
  ylab("Profit, $ per ha.") +
  facet_wrap(~ farm_type) +
  theme_minimal()
```