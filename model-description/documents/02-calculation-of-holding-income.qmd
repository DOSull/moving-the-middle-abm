---
title: "Calculation of holding income"
subtitle: "MtM ABM description"
author: "David O'Sullivan"
date: 2 July 2024
date-modified: 17 October 2025
lightbox: true
format:
  html:
    toc: true
    toc-depth: 4
    toc-title: "Contents"
    code-fold: true
    html-math-method: katex
    embed-resources: true
knitr:
  opts_chunk: 
    warning: false
    message: false
    # echo: false
    R.options: 
      knitr.table.html.attr: "quarto-disable-processing=true"
---

```{r echo=FALSE,warnings=FALSE,results=FALSE,message=FALSE}
#| label: libraries
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(kableExtra)

base_dir <- "~/Documents/work/mwlr-moving-the-middle/abm/data/market/default"
```


## Baseline income equation for holdings
The baseline profit $Z$ of each hectare of a holding is given by

$$Z=Y-X$$

where $Y$ is gross income, and $X$ is total costs. These are in turn given by

$$
\begin{array}{rcl}
Y &=& pq \\
X &=& x+\sum_it_ie_i
\end{array}
$$

where 

- $p$ is the price obtained per unit, 
- $q$ is the quantity produced per hectare,
- $x$ is the cost per hectare to operate,
- $e_i$ are various environmental metrics per hectare, most obviously greenhouse gas emissions, and 
- $t_i$ are any environmental taxes associated with each environmental metric.

Environmental taxes are configured via the `environmental-metrics.csv` file and can be set to zero in any or all cases as required so that the tax component of costs might reduce down to the operating cost per ha. $x$.
Each of these parameters may depend on the [farm type](00-overall-model-structure.qmd#land-use) $F$ and the land use capability (LUC), $L$, such that the full calculation of profit for each hectare of a holding is
$$
Z_{FL} = p_Fq_{FL} - x_{FL} - \sum_i t_ie_{i,FL}
$$
and total holding profit is obtaining by summing this quantity across all hectares of the holding. Overall profit of a farm is determined by summation across all its constituent holdings. Note that while currently all cells in a holding have the same LUC this is not a requirement and the calculation will work equally well if LUC were to vary across a holding. 

### Parameter values
The parameter values are stored in a number of CSV files which are read in by the model at start up from the `.data/market/<scenario>` folder specified.

#### Prices and environmental taxes
$p_F$ is found in the `prices.csv` file:

```{r}
#| label: prices
prices <- read.csv(str_glue("{base_dir}/prices.csv"), 
                   header = TRUE, row.names = 1) |> 
  slice(1:2) # only rows 1 & 2 relevant
prices |> 
  kable() |> 
  kable_styling("striped", full_width = F)
```

Environmental taxes $t_i$ are found in the `environmental-metrics.csv` file in the `price` column. In the example below the tax associated with greenhouse gas emissions is $10 per unit per ha and no tax is levied on nitrates. For ease of model configuration metrics are excluded from consideration if they are 'commented out' with a `#` prefix.

```{r}
#| label: taxes
metrics <- read.csv(str_glue("{base_dir}/environmental-metrics.csv"), 
                    header = TRUE, row.names = 1)
metrics |>
  kable() |>
  kable_styling("striped", full_width = FALSE)
```

In the remainder of this page we assume only greenhouse gases are taxed and use the simplified form $te$ for the environmental tax burden in preference to the more complete  $\sum_it_ie_{i,FL}$ shown above.

#### Yields 
Yields by farm type and land use capability, $q_{FL}$, are in the `commodity-yields.csv` file:

```{r}
#| label: yields
yields <- read.csv(str_glue("{base_dir}/yields.csv"), header = T)
yields |> 
  mutate(across(3:6, ~ round(., 1))) |>
  arrange(LUC) |>
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

#### Costs 
Base costs per ha. by farm type and land use capability, $x_{FL}$, are in the `input-costs.csv` file:

```{r}
#| label: costs
costs <- read.csv(str_glue("{base_dir}/costs.csv"), header = TRUE)
costs |> 
  mutate(across(3:6, ~ round(., 1))) |>
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

#### Emissions
Emissions per ha. by farm type and land use capability, $e_{FL}$, are in the `ghg_emissions.csv` file:

```{r}
#| label: emissions
emissions <- read.csv(str_glue("{base_dir}/ghg_emissions.csv"), header = TRUE)
emissions |> 
  mutate(across(3:6, ~ round(., 1))) |>
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```
&nbsp;

Note that all of yields, base costs, and emissions are stored as a mean and a standard deviation, and that each holding will see these numbers vary every model time period by drawing from a normal distribution. 

We can use these data to show the profit, gross income, and total costs for each farm type across different land use capability classes. We'll throw away the standard deviations for simplicity and consider only mean outcomes.

```{r}
#| label: plot
prices <- prices |> 
  t() |> 
  as.data.frame() |> 
  tibble::rownames_to_column("farm_type") |>
  mutate(carbon_tax = 10)

yields <- yields |>
  mutate(across(3:6, ~ round(., 1))) |>
  filter(mean_or_sd == "Mean") |> 
  select(-mean_or_sd) |>
  pivot_longer(-1) |>
  rename(farm_type = name, yield = value)

costs <- costs |>
  mutate(across(3:6, ~ round(., 1))) |>
  filter(mean_or_sd == "Mean") |> 
  select(-mean_or_sd) |>
  pivot_longer(-1) |>
  rename(farm_type = name, cost = value)

emissions <- emissions |>
  mutate(across(3:6, ~ round(., 1))) |>
  filter(mean_or_sd == "Mean") |> 
  select(-mean_or_sd) |>
  pivot_longer(-1) |>
  rename(farm_type = name, emissions = value)

combined_data <- prices |>
  left_join(yields) |>
  left_join(costs) |>
  left_join(emissions) |>
  mutate(gross_income = price * yield, # LUC = as.factor(LUC),
         total_costs = cost + carbon_tax * emissions, base_costs = cost,
         profit = gross_income - total_costs) |>
  select(farm_type, LUC, profit, price, yield, gross_income, base_costs,
         emissions, carbon_tax, total_costs) |>
  rename(Profit = profit, `Gross income` = gross_income, `Total costs` = total_costs)

combined_data |> 
  kable() |> 
  kable_styling("striped", full_width = F) |>
  scroll_box(height = "250px")
```

### Or visually...
Below are shown the income, costs, and net revenue per hectare for each farm type across the eight land use capability classes. These are crude estimates dating back to the ARLUNZ model^[See: Morgan FJ and AJ Daigneault. 2015. [Estimating Impacts of Climate Change Policy on Land Use: An Agent-Based Modelling Approach](https://dx.doi.org/10.1371/journal.pone.0127317). _PLOS ONE_ **10**(5): e0127317.] and will be updated in due course. Even so it is expected that the relative profitability of the different broad land use classes will remain similar.

```{r}
plot_data <- combined_data |> 
  pivot_longer(cols = c("Gross income", "Profit", "Total costs"))

ggplot(plot_data |> filter(name %in% c("Gross income", "Total costs"))) +
  geom_col(aes(x = as.factor(LUC), y = value, group = name, fill = name),
           position = "dodge") + 
  scale_fill_manual(values = c("#999999", "#ff6666"), name = "Income vs. Costs") +
  geom_point(data = plot_data |> filter(name == "Profit"), 
            aes(x = LUC, y = value, shape = name), size = 7) +
  scale_shape_manual(values = "\u2014", name = "") + # \u2014 is an em-dash
  xlab("Landuse Capability (LUC)") +
  ylab("Profit, $ per ha.") +
  facet_wrap(~ farm_type) +
  theme_minimal()
```

::: {.callout-note collapse="true"}
#### Update History

| Date | Changes
|:-|:------
| 2024-07-02 | Initial post.
| 2024-07-03 | Added bar chart of farm income/costs estimates. 
| 2024-07-04 | Added detail on calculation of relative change noting that profit can't be handled this way because it is $\pm$ and relative change is meaningless for such variables.
| 2024-07-05 | Corrected relative change from a percentage to a proportion.
| 2024-07-28 | Correction in equation summarising full calculation of profit. Added note to consider the nudge calculation's possible bias favouring changes _after_ bad years.
| 2025-02-19 | Split out from previous 'core loop' document.
| 2025-10-17 | Corrected code to cope with new formatting of various datasets.

:::
