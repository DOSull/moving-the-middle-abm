farms-own [
  the-land                ;; patch-set of patches of this farmer, this farm, or this holding
  farm-type               ;; farm type of farm - one of farm-types global
  farm-type-0
  
  my-farmer               ;; farmer who owns/runs farm
  my-holdings
  
  landuse-luc-profile     ;; matrix of counts of LUC - farm-type (i.e. landuse) combinations of the-land
  landuse-luc-profile-0
  current-profit          ;; most recent profit of farm summed across patches
  current-profit-0
  current-income          ;; most recent income of farm summed across patches
  current-income-0
  current-costs           ;; most recent costs of farm summed across patches
  current-costs-0
]

;; farm 'constructor'
to initialise-farm
  ;; will be called by the farmer who is 'myself' in this context
  set my-farmer myself
  set shape "circle 3"
  set hidden? false
  set landuse-luc-profile get-landuse-luc-profile the-land
  set label farm-type
  set label-color ifelse-value show-labels? [table:get colour-key "label"] [[0 0 0 0]]
end

to farm-change-farm-type [ft]
  set farm-type ft
  set landuse-luc-profile get-landuse-luc-profile the-land
end  

;; this always applies year-on-year variance so no 'with-var?' parameter required
to update-profit-of-farm
  set current-income sum [current-income] of my-holdings
  set current-costs sum [current-costs] of my-holdings
  set current-profit sum [current-profit] of my-holdings
end

;; reports a column matrix from the column sums of current landuse-luc-profile matrix
;; farm reporter
to-report get-landuse-profile
  report matrix:from-column-list (list matrix-column-sums landuse-luc-profile)
end

;; reports a column matrix from the row sums of current landuse-luc-profile matrix
;; farm reporter
to-report get-luc-profile
  report matrix:from-column-list (list matrix-row-sums landuse-luc-profile)
end

;; tests if intervention is applicable by checking if the result is in interventions table
;; farm reporter
to-report is-applicable-to-landuse? [i-type]
  report get-impact farm-type "costs" i-type != na-value
end

;; reports a 8 row 4 col matrix of the count of patches with each combination of
;; LUC code and landuse/farm-type in the patch-set poly. Usually this is called by a
;; farm, when poly will be 'the-land'. Initially all patches will be the same landuse
;; matching the farm-type, but some farmer actions may lead to this changing.
;; Run during initialisation and only altered if such changes in landuse are
;; undertaken.
;; not a farm reporter but usually run on the-land of farm turtles
to-report get-landuse-luc-profile [poly]
  let luc-i [position luc-code range-from-to 1 9] of poly
  let lu-j [position landuse farm-types] of poly
  let nrow 8
  let ncol length farm-types
  let farm-profile matrix:make-constant nrow ncol 0
  (foreach luc-i lu-j [ [i j] ->
    matrix:set farm-profile i j matrix:get farm-profile i j + 1
  ])
  report farm-profile
end

;; we might need some more of these...
;; returns impact by farm-type, effect-type, and intervention-type
;; not a farm reporter but most often run by a farm turtle
to-report get-impact [f-type e-type i-type]
  report table:get (table:get (table:get interventions i-type) e-type) f-type
end


;; The MIT License (MIT)
;;
;; Copyright (c) 2023-25 David O'Sullivan
;;
;; Permission is hereby granted, free of charge, to any person
;; obtaining a copy of this software and associated documentation
;; files (the "Software"), to deal in the Software without restriction,
;; including without limitation the rights to use, copy, modify, merge,
;; publish, distribute, sublicense, and/or sell copies of the Software,
;; and to  permit persons to whom the Software is furnished to do so,
;; subject to the following conditions:
;;
;; The above copyright notice and this permission notice shall be included
;; in all copies or substantial portions of the Software.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
;; OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
;; THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
;; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
;; DEALINGS IN THE SOFTWARE.
